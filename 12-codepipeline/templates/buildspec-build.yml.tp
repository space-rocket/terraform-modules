version: 0.2
env:
  variables:
    AWS_REGION: "${region}"
    S3_BUCKET: ""
    S3_KEY: ""
phases:
  install:
    commands:
      - echo ✅ Begin install phase
  pre_build:
    commands:
      - echo 👉 AWS_DEFAULT_REGION $AWS_DEFAULT_REGION
      - echo 👉 AWS_ACCOUNT_ID $AWS_ACCOUNT_ID
      - echo 👉 IMAGE_REPO_NAME $IMAGE_REPO_NAME
      - echo 👉 COMMIT_ID $CODEBUILD_RESOLVED_SOURCE_VERSION
      - export IMAGE_TAG=$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo 👉 IMAGE_TAG $IMAGE_TAG
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo "🚀 Starting build phase..."
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo "🏁 Post-build phase complete! All artifacts are ready and verified."
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - echo 💧
      - echo $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo $IMAGE_TAG > backend_image_tag.txt
artifacts:
  files:
    - backend_image_tag.txt
